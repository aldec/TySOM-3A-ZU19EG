diff --git a/drivers/clk/clk-si570.c b/drivers/clk/clk-si570.c
index 34b2560..cab56fc 100644
--- a/drivers/clk/clk-si570.c
+++ b/drivers/clk/clk-si570.c
@@ -5,9 +5,11 @@
  * Copyright (C) 2010, 2011 Ericsson AB.
  * Copyright (C) 2011 Guenter Roeck.
  * Copyright (C) 2011 - 2013 Xilinx Inc.
+ * Copyright (C) 2019 - 202x Aldec Inc.
  *
  * Author: Guenter Roeck <guenter.roeck@ericsson.com>
  *	   SÃ¶ren Brinkmann <soren.brinkmann@xilinx.com>
+ * Igor Gorokhov <igorg@aldec.com>
  */
 
 #include <linux/clk.h>
@@ -17,6 +19,7 @@
 #include <linux/i2c.h>
 #include <linux/regmap.h>
 #include <linux/slab.h>
+#include <linux/gpio/consumer.h>
 
 /* Si570 registers */
 #define SI570_REG_HS_N1		7
@@ -73,6 +76,7 @@ struct clk_si570 {
 	u64 rfreq;
 	u64 frequency;
 	struct i2c_client *i2c_client;
+    struct gpio_desc *lock_gpio;
 };
 #define to_clk_si570(_hw)	container_of(_hw, struct clk_si570, hw)
 
@@ -337,6 +341,11 @@ static int si570_set_rate(struct clk_hw *hw, unsigned long rate,
 	struct i2c_client *client = data->i2c_client;
 	int err;
 
+	/* WA for tx_refclk_rdy: disable lock */
+    if (data->lock_gpio) {
+        gpiod_set_value_cansleep(data->lock_gpio, 0x0);
+    }
+    
 	if (rate < SI570_MIN_FREQ || rate > data->max_freq) {
 		dev_err(&client->dev,
 			"requested frequency %lu Hz is out of range\n", rate);
@@ -354,6 +363,11 @@ static int si570_set_rate(struct clk_hw *hw, unsigned long rate,
 
 	data->frequency = rate;
 
+    /* WA for tx_refclk_rdy: enable lock */
+    if (data->lock_gpio) {
+        gpiod_set_value_cansleep(data->lock_gpio, 0x1);
+    }
+
 	return 0;
 }
 
@@ -413,6 +427,15 @@ static int si570_probe(struct i2c_client *client,
 	data->hw.init = &init;
 	data->i2c_client = client;
 
+    /* WA for HDMI-TX resolution change issue */
+    data->lock_gpio = devm_gpiod_get_optional(&client->dev, "lock",
+						   GPIOD_OUT_HIGH);
+    if (IS_ERR(data->lock_gpio)) {
+        err = PTR_ERR(data->lock_gpio);        
+        dev_err(&client->dev, "failed to request lock GPIO\n");
+        return err;     
+    }
+    
 	if (variant == si57x) {
 		err = of_property_read_u32(client->dev.of_node,
 				"temperature-stability", &stability);
@@ -518,5 +541,6 @@ module_i2c_driver(si570_driver);
 
 MODULE_AUTHOR("Guenter Roeck <guenter.roeck@ericsson.com>");
 MODULE_AUTHOR("Soeren Brinkmann <soren.brinkmann@xilinx.com>");
+MODULE_AUTHOR("Igor Gorokhov <igorg@aldec.com>");
 MODULE_DESCRIPTION("Si570 driver");
 MODULE_LICENSE("GPL");
